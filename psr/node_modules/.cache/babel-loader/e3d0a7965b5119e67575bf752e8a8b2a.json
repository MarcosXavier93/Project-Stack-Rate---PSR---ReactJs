{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcos\\\\Documents\\\\Project-Stack-Rate---PSR---ReactJs\\\\psr\\\\src\\\\HomeScreen\\\\Components\\\\Row.js\";\nimport React, { Component } from \"react\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport \"./App.css\"; // list of items\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst list = [{\n  name: \"item1\"\n}, {\n  name: \"item2\"\n}, {\n  name: \"item3\"\n}, {\n  name: \"item4\"\n}, {\n  name: \"item5\"\n}, {\n  name: \"item6\"\n}, {\n  name: \"item7\"\n}, {\n  name: \"item8\"\n}, {\n  name: \"item9\"\n}]; // One item component\n// selected prop will be passed\n\nconst MenuItem = ({\n  text,\n  selected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `menu-item ${selected ? \"active\" : \"\"}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}; // All items component\n// Important! add unique key\n\n\n_c = MenuItem;\nexport const Menu = (list, selected) => list.map(el => {\n  const {\n    name\n  } = el;\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    text: name,\n    selected: selected\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Menu;\n\nconst Arrow = ({\n  text,\n  className\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = Arrow;\nconst ArrowLeft = Arrow({\n  text: \"<\",\n  className: \"arrow-prev\"\n});\nconst ArrowRight = Arrow({\n  text: \">\",\n  className: \"arrow-next\"\n});\nconst selected = \"item1\";\n\nclass Row extends Component {\n  constructor(props) {\n    super(props); // call it again if items count changes\n\n    this.state = {\n      selected\n    };\n\n    this.onSelect = key => {\n      this.setState({\n        selected: key\n      });\n    };\n\n    this.menuItems = Menu(list, selected);\n  }\n\n  render() {\n    const {\n      selected\n    } = this.state; // Create menu from items\n\n    const menu = this.menuItems;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(ScrollMenu, {\n        data: menu,\n        arrowLeft: ArrowLeft,\n        arrowRight: ArrowRight,\n        selected: selected,\n        onSelect: this.onSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MenuItem\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"Arrow\");","map":{"version":3,"sources":["C:/Users/Marcos/Documents/Project-Stack-Rate---PSR---ReactJs/psr/src/HomeScreen/Components/Row.js"],"names":["React","Component","ScrollMenu","list","name","MenuItem","text","selected","Menu","map","el","Arrow","className","ArrowLeft","ArrowRight","Row","constructor","props","state","onSelect","key","setState","menuItems","render","menu"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\r\nimport \"./App.css\";\r\n\r\n// list of items\r\nconst list = [\r\n  { name: \"item1\" },\r\n  { name: \"item2\" },\r\n  { name: \"item3\" },\r\n  { name: \"item4\" },\r\n  { name: \"item5\" },\r\n  { name: \"item6\" },\r\n  { name: \"item7\" },\r\n  { name: \"item8\" },\r\n  { name: \"item9\" },\r\n];\r\n\r\n// One item component\r\n// selected prop will be passed\r\nconst MenuItem = ({ text, selected }) => {\r\n  return <div className={`menu-item ${selected ? \"active\" : \"\"}`}>{text}</div>;\r\n};\r\n\r\n// All items component\r\n// Important! add unique key\r\nexport const Menu = (list, selected) =>\r\n  list.map((el) => {\r\n    const { name } = el;\r\n\r\n    return <MenuItem text={name} key={name} selected={selected} />;\r\n  });\r\n\r\nconst Arrow = ({ text, className }) => {\r\n  return <div className={className}>{text}</div>;\r\n};\r\n\r\nconst ArrowLeft = Arrow({ text: \"<\", className: \"arrow-prev\" });\r\nconst ArrowRight = Arrow({ text: \">\", className: \"arrow-next\" });\r\n\r\nconst selected = \"item1\";\r\n\r\nclass Row extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // call it again if items count changes\r\n    this.menuItems = Menu(list, selected);\r\n  }\r\n\r\n  state = {\r\n    selected,\r\n  };\r\n\r\n  onSelect = (key) => {\r\n    this.setState({ selected: key });\r\n  };\r\n\r\n  render() {\r\n    const { selected } = this.state;\r\n    // Create menu from items\r\n    const menu = this.menuItems;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <ScrollMenu\r\n          data={menu}\r\n          arrowLeft={ArrowLeft}\r\n          arrowRight={ArrowRight}\r\n          selected={selected}\r\n          onSelect={this.onSelect}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}