{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marcos\\\\Documents\\\\Project-Stack-Rate---PSR---ReactJs\\\\psr\\\\src\\\\HomeScreen\\\\Components\\\\Row.js\";\nimport React, { Component } from \"react\";\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\nimport \"./App.css\"; // list of items\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst list = [{\n  name: \"item1\"\n}, {\n  name: \"item2\"\n}, {\n  name: \"item3\"\n}, {\n  name: \"item4\"\n}, {\n  name: \"item5\"\n}, {\n  name: \"item6\"\n}, {\n  name: \"item7\"\n}, {\n  name: \"item8\"\n}, {\n  name: \"item9\"\n}];\n\nconst MenuItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: props.animeListaNovidades.map(anime => /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"row_posterLarge\",\n        href: anime.url,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: anime.image_url,\n            alt: \"\"\n          }, anime.rank, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: anime.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, anime.rank, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}; // All items component\n// Important! add unique key\n\n\n_c = MenuItem;\nexport const Menu = (list, selected) => list.map(el => {\n  const {\n    name\n  } = el;\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    text: name,\n    selected: selected\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Menu;\n\nconst Arrow = ({\n  text,\n  className\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = Arrow;\nconst ArrowLeft = Arrow({\n  text: \"<\",\n  className: \"arrow-prev\"\n});\nconst ArrowRight = Arrow({\n  text: \">\",\n  className: \"arrow-next\"\n});\nconst selected = \"item1\";\nexport default class Row extends Component {\n  constructor(props) {\n    super(props); // call it again if items count changes\n\n    this.state = {\n      selected\n    };\n\n    this.onSelect = key => {\n      this.setState({\n        selected: key\n      });\n    };\n\n    this.menuItems = Menu(list, selected);\n  }\n\n  render() {\n    const {\n      selected\n    } = this.state; // Create menu from items\n\n    const menu = this.menuItems;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(ScrollMenu, {\n        data: menu,\n        arrowLeft: ArrowLeft,\n        arrowRight: ArrowRight,\n        selected: selected,\n        onSelect: this.onSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MenuItem\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"Arrow\");","map":{"version":3,"sources":["C:/Users/Marcos/Documents/Project-Stack-Rate---PSR---ReactJs/psr/src/HomeScreen/Components/Row.js"],"names":["React","Component","ScrollMenu","list","name","MenuItem","props","animeListaNovidades","map","anime","url","image_url","rank","title","Menu","selected","el","Arrow","text","className","ArrowLeft","ArrowRight","Row","constructor","state","onSelect","key","setState","menuItems","render","menu"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAO,WAAP,C,CAEA;;;AACA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE;AAAR,CADW,EAEX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAFW,EAGX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAHW,EAIX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAJW,EAKX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CALW,EAMX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CANW,EAOX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAPW,EAQX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CARW,EASX;AAAEA,EAAAA,IAAI,EAAE;AAAR,CATW,CAAb;;AAYA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGA,KAAK,CAACC,mBAAN,CAA0BC,GAA1B,CAA+BC,KAAD,iBAC7B;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,IAAI,EAAEA,KAAK,CAACC,GAFd;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,YAJN;AAAA,gCAOE;AAAA,iCACE;AAAsB,YAAA,GAAG,EAAED,KAAK,CAACE,SAAjC;AAA4C,YAAA,GAAG,EAAC;AAAhD,aAAUF,KAAK,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE;AAAA,oBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAKOJ,KAAK,CAACG,IALb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBD,C,CAuBA;AACA;;;KAxBMP,Q;AAyBN,OAAO,MAAMS,IAAI,GAAG,CAACX,IAAD,EAAOY,QAAP,KAClBZ,IAAI,CAACK,GAAL,CAAUQ,EAAD,IAAQ;AACf,QAAM;AAAEZ,IAAAA;AAAF,MAAWY,EAAjB;AAEA,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEZ,IAAhB;AAAiC,IAAA,QAAQ,EAAEW;AAA3C,KAA2BX,IAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD,CADK;MAAMU,I;;AAOb,MAAMG,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAyB;AACrC,sBAAO;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAAA,cAA4BD;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMD,K;AAIN,MAAMG,SAAS,GAAGH,KAAK,CAAC;AAAEC,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,SAAS,EAAE;AAAxB,CAAD,CAAvB;AACA,MAAME,UAAU,GAAGJ,KAAK,CAAC;AAAEC,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,SAAS,EAAE;AAAxB,CAAD,CAAxB;AAEA,MAAMJ,QAAQ,GAAG,OAAjB;AAEA,eAAe,MAAMO,GAAN,SAAkBrB,SAAlB,CAA4B;AACzCsB,EAAAA,WAAW,CAACjB,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,SAMnBkB,KANmB,GAMX;AACNT,MAAAA;AADM,KANW;;AAAA,SAUnBU,QAVmB,GAUPC,GAAD,IAAS;AAClB,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAEW;AAAZ,OAAd;AACD,KAZkB;;AAGjB,SAAKE,SAAL,GAAiBd,IAAI,CAACX,IAAD,EAAOY,QAAP,CAArB;AACD;;AAUDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA;AAAF,QAAe,KAAKS,KAA1B,CADO,CAEP;;AACA,UAAMM,IAAI,GAAG,KAAKF,SAAlB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAEE,IADR;AAEE,QAAA,SAAS,EAAEV,SAFb;AAGE,QAAA,UAAU,EAAEC,UAHd;AAIE,QAAA,QAAQ,EAAEN,QAJZ;AAKE,QAAA,QAAQ,EAAE,KAAKU;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA/BwC","sourcesContent":["import React, { Component } from \"react\";\r\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\r\nimport \"./App.css\";\r\n\r\n// list of items\r\nconst list = [\r\n  { name: \"item1\" },\r\n  { name: \"item2\" },\r\n  { name: \"item3\" },\r\n  { name: \"item4\" },\r\n  { name: \"item5\" },\r\n  { name: \"item6\" },\r\n  { name: \"item7\" },\r\n  { name: \"item8\" },\r\n  { name: \"item9\" },\r\n];\r\n\r\nconst MenuItem = (props) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"row_posters\">\r\n        {props.animeListaNovidades.map((anime) => (\r\n          <a\r\n            className=\"row_posterLarge\"\r\n            href={anime.url}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            key={anime.rank}\r\n          >\r\n            <figure>\r\n              <img key={anime.rank} src={anime.image_url} alt=\"\" />\r\n            </figure>\r\n            <h3>{anime.title}</h3>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// All items component\r\n// Important! add unique key\r\nexport const Menu = (list, selected) =>\r\n  list.map((el) => {\r\n    const { name } = el;\r\n\r\n    return <MenuItem text={name} key={name} selected={selected} />;\r\n  });\r\n\r\nconst Arrow = ({ text, className }) => {\r\n  return <div className={className}>{text}</div>;\r\n};\r\n\r\nconst ArrowLeft = Arrow({ text: \"<\", className: \"arrow-prev\" });\r\nconst ArrowRight = Arrow({ text: \">\", className: \"arrow-next\" });\r\n\r\nconst selected = \"item1\";\r\n\r\nexport default class Row extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // call it again if items count changes\r\n    this.menuItems = Menu(list, selected);\r\n  }\r\n\r\n  state = {\r\n    selected,\r\n  };\r\n\r\n  onSelect = (key) => {\r\n    this.setState({ selected: key });\r\n  };\r\n\r\n  render() {\r\n    const { selected } = this.state;\r\n    // Create menu from items\r\n    const menu = this.menuItems;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <ScrollMenu\r\n          data={menu}\r\n          arrowLeft={ArrowLeft}\r\n          arrowRight={ArrowRight}\r\n          selected={selected}\r\n          onSelect={this.onSelect}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}